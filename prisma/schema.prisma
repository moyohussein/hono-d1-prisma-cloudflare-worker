// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Users {
  id            Int       @id @default(autoincrement())
  email         String    @unique
  name          String
  password      String
  role          Role      @default(USER)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  emailVerified DateTime?
  deletedAt     DateTime?
  tokens        Tokens[]
  idCards       IdCards[]

  @@map("users")
}

enum Role {
  USER
  ADMIN
}

model Tokens {
  id        Int       @id @default(autoincrement())
  userId    Int
  type      String    // 'verify' | 'reset'
  tokenHash String
  expiresAt DateTime
  usedAt    DateTime?
  createdAt DateTime  @default(now())

  user Users @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("tokens")
  @@index([userId, type])
}

model IdCards {
  id          Int       @id @default(autoincrement())
  userId      Int       @map("user_id")
  displayName String    @map("display_name")
  attributes  Json
  imageUrl    String?   @map("image_url")
  publicId    String?   @map("public_id")
  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime  @updatedAt @map("updated_at")

  user Users @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("id_cards")
  @@index([userId])
}
